<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- MyBatis에게 Mapper경로를 적어야 함-->
<mapper namespace="com.example.first_spring.mapper.EmpMapper" >
<!-- id = MainMapper method이름 => java에서의 override -->	
	<select id="getEmpList" resultType="EmpVO">
		SELECT
			empno,
			ename, 
			job
		FROM emp
	</select>
	
	<select id="getEmp" resultType="EmpVO">
		SELECT
			ename
		FROM emp
		<!-- 안에 변수 이름은 Mapper의 파라미터 변수 이름과 동일해야 함 -->
		WHERE empno = #{empNo}
	</select>
	
	<select id="getdoubleLName" resultType="EmpVO">
		SELECT
			ename,
			job
		FROM emp
		WHERE ename LIKE '%LL%'
	</select>
	
	<select id="getComm" resultType="EmpVO">
		SELECT
			ename,
			comm
		FROM emp
		WHERE comm is null
	</select>
	<select id="getHiredate" resultType="EmpVO">
		SELECT
			ENAME ,
			HIREDATE 
		FROM emp e 
		WHERE 
			HIREDATE between '1980-12-17' and '1982-01-23'
	</select>
	
	
	
	<!-- 문제 0. 부서가 10, 30에 속하는 사원 중 급여가 1500을 넘는 사원의 이름 및 급여 조회 -->
	<select id="getSalDeptno" resultType="EmpVO">
		select
			ENAME ,
			SAL
		from emp 
		where (DEPTNO = 10
		or 
		DEPTNO = 30)
		and 
		SAL >= #{sal}
	
	</select>
	
	<!-- 문제 1. MGR이 NULL인 사원 이름, 직업, 급여 조회 -->
	<select id="getNotMgr" resultType="EmpVO">
	select
		ENAME ,
		MGR 
	from emp 
	where MGR is null 
	</select>
	
	<!-- 문제 2. 특정 년도에 입사한 사원 이름, 직업, 입사날짜, 급여 조회-->
	<select id="getHiredateYear" resultType="EmpVO">
	select
		ENAME ,
		JOB ,
		HIREDATE , 
		SAL 
	from emp 
	where date_format(HIREDATE ,'%Y') = #{year} 
	
	</select>
	
	<!-- 문제 3. 입사 날짜가12월에 입사한 사원 이름, 급여 조회-->
	<select id="getMaxSal" resultType="EmpVO">
	select
		ENAME , 
		SAL 
	from emp 
	where date_format(HIREDATE ,'%m') = #{month} 
	<!-- 또는 query로만 
		select
		ENAME , 
		SAL 
		from emp 
		where date_format(HIREDATE ,'%m') = 12
		order by SAL desc 
		limit 1 -->
	</select>
	
	<!-- 문제 4. 특정 job에 속한 사원번호, 사원 이름, 입사날짜 조회 -->
	<select id="getFirstHiredate" resultType="EmpVO">
	select
		ENAME ,
		HIREDATE ,
		SAL 
	from emp 
	where JOB = #{job}
	order by HIREDATE asc 
	limit 1
	</select>
	
	<!-- 문제 5. 특정 사원의 모든 정보 조회(emp, dept 테이블 조인) -->
	
	<resultMap type="DeptVO" id="DeptVO">
		<result column="deptno" property="deptno"/>
		<result column="dname" property="dname"/>
		<result column="LOC" property="LOC"/>
	</resultMap>
	
	<resultMap type="EmpVO" id="EmpVO">
		<result column="empno" property="empno"/>
		<result column="ename" property="ename"/>
		<result column="job" property="job"/>
		<result column="mgr" property="mgr"/>
		<result column="hiredate" property="hiredate"/>
		<result column="sal" property="sal"/>
		<result column="comm" property="comm"/>
		<result column="deptno" property="deptno"/>
		<!-- 먼저 join할 table을 필드변수로 선언해 줘야함 -->
		<collection property="deptVo" resultMap="DeptVO"/>
	</resultMap>
	
	<select id="getEmpnoAllData" parameterType="EmpVO" resultMap="EmpVO">
	select
		*
	from emp as e
	inner join dept as d
	on e.DEPTNO = d.DEPTNO 
	where e.EMPNO = #{empno}	
	</select>
	
	
	<!-- insert query -->
	<!-- insert시에 해당테이블의 not null확인 -->
	<!-- oracle은 Mybatis Insert할때 PK 문법이 다름(시퀀스를 추가)-->
	<insert id="insertEmp">
		INSERT INTO emp
		(
			empno,
			ename,
			deptno,
			hiredate			
		)
		VALUES
		(
			#{empno},
			#{ename},
			#{deptno},
			now()
		)
	</insert>
	
	<delete id="deleteEmp">
		DELETE FROM emp
		WHERE empno = #{empno}
	</delete>
	
	<update id="updateEmp">
		UPDATE emp
		SET 
			comm = #{comm}
		WHERE empno = #{empno}
	</update>
	
	
	<select id="getJobManager" resultType="EmpVO">
		select
				empno,
				ename , 
				job ,
				comm 
		from emp 
		where job = #{job}
		and 
		SAL >= #{sal}
	</select>
</mapper>